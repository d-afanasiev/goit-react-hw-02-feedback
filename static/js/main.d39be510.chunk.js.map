{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","Statistics","this","props","good","neutral","bad","total","positivePercentage","className","css","list","Component","FeedbackOptions","options","console","log","wrapperButtons","type","Feedback","state","countTotalFeedback","countPositiveFeedbackPercentage","feedback","titleFeedback","titleStatistics","App","feedbacks","Object","values","reduce","goodFeedback","totalFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,cAAgB,gCAAgC,gBAAkB,oC,kBCA1HD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,eAAiB,0C,oMC0BpBC,E,4JAtBb,WAAU,IAAD,EACmDC,KAAKC,MAAvDC,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,mBACnC,OACE,qBAAIC,UAAWC,IAAIC,KAAnB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,yCAAYC,EAAZ,e,GATiBI,a,iBCcVC,E,4JAbb,WAAU,IACAC,EAAYZ,KAAKC,MAAjBW,QAER,OADAC,QAAQC,IAAIF,GAEV,sBAAKL,UAAWC,IAAIO,eAApB,UACE,wBAAQC,KAAK,SAAb,kBACA,wBAAQA,KAAK,SAAb,qBACA,wBAAQA,KAAK,SAAb,wB,GARsBN,aCyCfO,E,4JAtCb,WAAU,IAAD,EAELjB,KAAKC,MADCiB,EADD,EACCA,MAAOC,EADR,EACQA,mBAAoBC,EAD5B,EAC4BA,gCAE3BlB,EAAuBgB,EAAvBhB,KAAMC,EAAiBe,EAAjBf,QAASC,EAAQc,EAARd,IACvB,OACE,yBAAQG,UAAWC,IAAIa,SAAvB,UACE,oBAAId,UAAWC,IAAIc,cAAnB,mCACA,cAAC,EAAD,CAAiBV,QAASM,IAO1B,oBAAIX,UAAWC,IAAIe,gBAAnB,wBAEA,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EAAmBD,GAC1BZ,mBAAoBc,EAAgCF,Y,GAtBvCR,aCmCRc,E,4MApCbN,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPe,mBAAqB,SAACM,GAKpB,OAJuBC,OAAOC,OAAOF,GACAG,QAAO,SAACvB,EAAOgB,GAClD,OAAQhB,EAASgB,IAChB,I,EAILD,gCAAkC,SAACC,GACjC,IAAMQ,EAAeR,EAASnB,KAExB4B,EADiBJ,OAAOC,OAAON,GACAO,QAAO,SAACvB,EAAOgB,GAClD,OAAQhB,EAASgB,IAChB,GACH,OAAOU,KAAKC,MAAOH,EAAeC,EAAiB,M,4CAGrD,WACE,OACE,qBAAKvB,UAAU,MAAf,SACE,cAAC,EAAD,CACEW,MAAOlB,KAAKkB,MACZC,mBAAoBnB,KAAKmB,mBACzBC,gCAAiCpB,KAAKoB,wC,GA9B9BV,aCClBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d39be510.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__3n1tl\",\"titleFeedback\":\"Feedback_titleFeedback__3IwcY\",\"titleStatistics\":\"Feedback_titleStatistics__2u_TP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperButtons\":\"FeedbackOptions_wrapperButtons__NKrmN\"};","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./Statistics.module.css\";\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n    return (\n      <ul className={css.list}>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Total: {positivePercentage} %</li>\n      </ul>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./FeedbackOptions.module.css\";\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options } = this.props;\n    console.log(options);\n    return (\n      <div className={css.wrapperButtons}>\n        <button type=\"submit\">Good</button>\n        <button type=\"submit\">Neutral</button>\n        <button type=\"submit\">Bad</button>\n      </div>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./Feedback.module.css\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\n\nclass Feedback extends Component {\n  render() {\n    const { state, countTotalFeedback, countPositiveFeedbackPercentage } =\n      this.props;\n    const { good, neutral, bad } = state;\n    return (\n      <header className={css.feedback}>\n        <h1 className={css.titleFeedback}>Please leave feedback</h1>\n        <FeedbackOptions options={state} />\n        {/* <div className={css.wrapperButtons}>\n          <button type=\"submit\">Good</button>\n          <button type=\"submit\">Neutral</button>\n          <button type=\"submit\">Bad</button>\n        </div> */}\n\n        <h2 className={css.titleStatistics}>Statistics</h2>\n\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback(state)}\n          positivePercentage={countPositiveFeedbackPercentage(state)}\n        />\n      </header>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  state: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  countTotalFeedback: PropTypes.func,\n  countPositiveFeedbackPercentage: PropTypes.func,\n};\n\nexport default Feedback;\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport Feedback from \"./components/Feedback/Feedback\";\n\nclass App extends Component {\n  state = {\n    good: 2,\n    neutral: 5,\n    bad: 2,\n  };\n\n  countTotalFeedback = (feedbacks) => {\n    const valuesFeedback = Object.values(feedbacks);\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = (feedback) => {\n    const goodFeedback = feedback.good;\n    const valuesFeedback = Object.values(feedback);\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return Math.round((goodFeedback / totalFeedback) * 100);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Feedback\n          state={this.state}\n          countTotalFeedback={this.countTotalFeedback}\n          countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}