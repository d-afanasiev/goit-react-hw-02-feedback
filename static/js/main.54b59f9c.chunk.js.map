{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","Statistics","this","props","good","neutral","bad","total","positivePercentage","className","css","list","Component","FeedbackOptions","options","keyObject","Object","keys","wrapperButtons","map","button","key","type","Section","title","children","titleFeedback","Feedback","state","countTotalFeedback","countPositiveFeedbackPercentage","feedback","App","feedbacks","values","reduce","goodFeedback","totalFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qIACAA,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,eAAiB,0C,gBCAnCD,EAAOC,QAAU,CAAC,cAAgB,iC,oMC0BnBC,E,4JAtBb,WAAU,IAAD,EACmDC,KAAKC,MAAvDC,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,mBACnC,OACE,qBAAIC,UAAWC,IAAIC,KAAnB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,yCAAYC,EAAZ,e,GATiBI,a,iBCwBVC,E,4JAvBb,WAAU,IACAC,EAAYZ,KAAKC,MAAjBW,QACFC,EAAYC,OAAOC,KAAKH,GAC9B,OACE,qBAAKL,UAAWC,IAAIQ,eAApB,SACGH,EAAUI,KAAI,SAACC,EAAQC,GAAT,OACb,wBAAkBC,KAAK,SAAvB,SACGF,GADUC,Y,GAPOT,a,iBCgBfW,E,4JAfb,WAAU,IAAD,EACqBrB,KAAKC,MAAzBqB,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,oCACE,oBAAIhB,UAAWC,IAAIgB,cAAnB,SAAmCF,IAClCC,S,GANab,aCsCPe,E,4JAlCb,WAAU,IAAD,EAELzB,KAAKC,MADCyB,EADD,EACCA,MAAOC,EADR,EACQA,mBAAoBC,EAD5B,EAC4BA,gCAE3B1B,EAAuBwB,EAAvBxB,KAAMC,EAAiBuB,EAAjBvB,QAASC,EAAQsB,EAARtB,IACvB,OACE,yBAAQG,UAAWC,IAAIqB,SAAvB,UACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBV,QAASc,MAG5B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACE,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,EAAmBD,GAC1BpB,mBAAoBsB,EAAgCF,c,GAjBzChB,aCkCRoB,E,4MApCbJ,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,mBAAqB,SAACI,GAKpB,OAJuBjB,OAAOkB,OAAOD,GACAE,QAAO,SAAC5B,EAAOwB,GAClD,OAAQxB,EAASwB,IAChB,I,EAILD,gCAAkC,SAACC,GACjC,IAAMK,EAAeL,EAAS3B,KAExBiC,EADiBrB,OAAOkB,OAAOH,GACAI,QAAO,SAAC5B,EAAOwB,GAClD,OAAQxB,EAASwB,IAChB,GACH,OAAOO,KAAKC,MAAOH,EAAeC,EAAiB,M,4CAGrD,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,CACEmB,MAAO1B,KAAK0B,MACZC,mBAAoB3B,KAAK2B,mBACzBC,gCAAiC5B,KAAK4B,wC,GA9B9BlB,aCClB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.54b59f9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__3n1tl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperButtons\":\"FeedbackOptions_wrapperButtons__NKrmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleFeedback\":\"Section_titleFeedback__pgDoJ\"};","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./Statistics.module.css\";\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n    return (\n      <ul className={css.list}>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Total: {positivePercentage} %</li>\n      </ul>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./FeedbackOptions.module.css\";\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options } = this.props;\n    const keyObject = Object.keys(options);\n    return (\n      <div className={css.wrapperButtons}>\n        {keyObject.map((button, key) => (\n          <button key={key} type=\"submit\">\n            {button}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./Section.module.css\";\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <h1 className={css.titleFeedback}>{title}</h1>\n        {children}\n      </section>\n    );\n  }\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./Feedback.module.css\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Section from \"../Section/Section\";\n\nclass Feedback extends Component {\n  render() {\n    const { state, countTotalFeedback, countPositiveFeedbackPercentage } =\n      this.props;\n    const { good, neutral, bad } = state;\n    return (\n      <header className={css.feedback}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={state} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback(state)}\n            positivePercentage={countPositiveFeedbackPercentage(state)}\n          />\n        </Section>\n      </header>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  state: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  countTotalFeedback: PropTypes.func,\n  countPositiveFeedbackPercentage: PropTypes.func,\n};\n\nexport default Feedback;\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport Feedback from \"./components/Feedback/Feedback\";\n\nclass App extends Component {\n  state = {\n    good: 2,\n    neutral: 5,\n    bad: 2,\n  };\n\n  countTotalFeedback = (feedbacks) => {\n    const valuesFeedback = Object.values(feedbacks);\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = (feedback) => {\n    const goodFeedback = feedback.good;\n    const valuesFeedback = Object.values(feedback);\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return Math.round((goodFeedback / totalFeedback) * 100);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Feedback\n          state={this.state}\n          countTotalFeedback={this.countTotalFeedback}\n          countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}