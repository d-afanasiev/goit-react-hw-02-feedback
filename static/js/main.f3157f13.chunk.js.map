{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","Statistics","this","props","good","neutral","bad","total","positivePercentage","className","css","list","Component","FeedbackOptions","options","onLeaveFeedback","keyObject","Object","keys","wrapperButtons","map","nameButton","key","type","onClick","Section","title","children","titleFeedback","Notification","message","text","Feedback","state","countTotalFeedback","countPositiveFeedbackPercentage","feedback","App","feedbacks","values","reduce","goodFeedback","totalFeedback","Math","round","value","setState","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,eAAiB,0C,gBCAnCD,EAAOC,QAAU,CAAC,cAAgB,iC,gBCAlCD,EAAOC,QAAU,CAAC,KAAO,6B,4MC0BVC,E,4JAtBb,WAAU,IAAD,EACmDC,KAAKC,MAAvDC,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,mBACnC,OACE,qBAAIC,UAAWC,IAAIC,KAAnB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,yCAAYC,EAAZ,e,GATiBI,a,iBC4BVC,E,4JA3Bb,WAAU,IAAD,EAC8BX,KAAKC,MAAlCW,EADD,EACCA,QAASC,EADV,EACUA,gBACXC,EAAYC,OAAOC,KAAKJ,GAC9B,OACE,qBAAKL,UAAWC,IAAIS,eAApB,SACGH,EAAUI,KAAI,SAACC,EAAYC,GAAb,OACb,wBAEEC,KAAK,SACLC,QAAS,kBAAMT,EAAgBM,IAHjC,SAKGA,GAJIC,Y,GARaV,a,iBCgBfa,E,4JAfb,WAAU,IAAD,EACqBvB,KAAKC,MAAzBuB,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,oCACE,oBAAIlB,UAAWC,IAAIkB,cAAnB,SAAmCF,IAClCC,S,GANaf,a,iBCWPiB,E,4JAVb,WAAU,IACAC,EAAY5B,KAAKC,MAAjB2B,QACR,OAAO,mBAAGrB,UAAWC,IAAIqB,KAAlB,SAAyBD,Q,GAHTlB,aCgDZoB,E,4JA3Cb,WAAU,IAAD,EAMH9B,KAAKC,MAJP8B,EAFK,EAELA,MACAC,EAHK,EAGLA,mBACAC,EAJK,EAILA,gCACApB,EALK,EAKLA,gBAEMX,EAAuB6B,EAAvB7B,KAAMC,EAAiB4B,EAAjB5B,QAASC,EAAQ2B,EAAR3B,IAEvB,OACE,yBAAQG,UAAWC,IAAI0B,SAAvB,UACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBZ,QAASmB,EAAOlB,gBAAiBA,MAGpD,cAAC,EAAD,CAASW,MAAM,aAAf,SACiC,IAA9BQ,EAAmBD,GAClB,cAAC,EAAD,CAAcH,QAAQ,sBAEtB,cAAC,EAAD,CACE1B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,EAAmBD,GAC1BzB,mBAAoB2B,EAAgCF,c,GAzB3CrB,aCwCRyB,E,4MA3CbJ,MAAQ,CACN7B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP4B,mBAAqB,SAACI,GAKpB,OAJuBrB,OAAOsB,OAAOD,GACAE,QAAO,SAACjC,EAAO6B,GAClD,OAAQ7B,EAAS6B,IAChB,I,EAILD,gCAAkC,SAACC,GACjC,IAAMK,EAAeL,EAAShC,KAExBsC,EADiBzB,OAAOsB,OAAOH,GACAI,QAAO,SAACjC,EAAO6B,GAClD,OAAQ7B,EAAS6B,IAChB,GACH,OAAOO,KAAKC,MAAOH,EAAeC,EAAiB,M,EAGrD3B,gBAAkB,SAAC8B,GACjB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAQE,EAAUF,GAAS,O,4CAIhC,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,CACEwB,MAAO/B,KAAK+B,MACZC,mBAAoBhC,KAAKgC,mBACzBC,gCAAiCjC,KAAKiC,gCACtCpB,gBAAiBb,KAAKa,wB,GArCdH,aCClBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f3157f13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__3n1tl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperButtons\":\"FeedbackOptions_wrapperButtons__NKrmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleFeedback\":\"Section_titleFeedback__pgDoJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3WvWm\"};","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./Statistics.module.css\";\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n    return (\n      <ul className={css.list}>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Total: {positivePercentage} %</li>\n      </ul>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./FeedbackOptions.module.css\";\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n    const keyObject = Object.keys(options);\n    return (\n      <div className={css.wrapperButtons}>\n        {keyObject.map((nameButton, key) => (\n          <button\n            key={key}\n            type=\"submit\"\n            onClick={() => onLeaveFeedback(nameButton)}\n          >\n            {nameButton}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./Section.module.css\";\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <h1 className={css.titleFeedback}>{title}</h1>\n        {children}\n      </section>\n    );\n  }\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./Notification.module.css\";\n\nclass Notification extends Component {\n  render() {\n    const { message } = this.props;\n    return <p className={css.text}>{message}</p>;\n  }\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport css from \"./Feedback.module.css\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Section from \"../Section/Section\";\nimport Notification from \"../Notification/Notification\";\n\nclass Feedback extends Component {\n  render() {\n    const {\n      state,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n      onLeaveFeedback,\n    } = this.props;\n    const { good, neutral, bad } = state;\n\n    return (\n      <header className={css.feedback}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={state} onLeaveFeedback={onLeaveFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback(state) === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback(state)}\n              positivePercentage={countPositiveFeedbackPercentage(state)}\n            />\n          )}\n        </Section>\n      </header>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  state: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  countTotalFeedback: PropTypes.func,\n  countPositiveFeedbackPercentage: PropTypes.func,\n};\n\nexport default Feedback;\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport Feedback from \"./components/Feedback/Feedback\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = (feedbacks) => {\n    const valuesFeedback = Object.values(feedbacks);\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = (feedback) => {\n    const goodFeedback = feedback.good;\n    const valuesFeedback = Object.values(feedback);\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return Math.round((goodFeedback / totalFeedback) * 100);\n  };\n\n  onLeaveFeedback = (value) => {\n    this.setState((prevState) => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Feedback\n          state={this.state}\n          countTotalFeedback={this.countTotalFeedback}\n          countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}